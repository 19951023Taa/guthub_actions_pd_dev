name: Terraform Workflow

on:
  push:
    branches:
      - feature/*
    paths:
      - 'dev/**'
      - 'pd/**'
  pull_request:
    branches:
      - main
    paths:
      - 'dev/**'
      - 'pd/**'
    types:
      - closed

jobs:
  terraform-plan-dev:
    name: Terraform Plan (dev)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/feature/*' && contains(github.event.head_commit.message, '[dev]')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Terraform Init (dev)
        run: terraform init -reconfigure -backend-config=tfbackend
        working-directory: ./dev

      - name: Terraform Plan (dev)
        run: terraform plan -var-file=dev.tfvars
        working-directory: ./dev

  terraform-plan-pd:
    name: Terraform Plan (pd)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/feature/*' && contains(github.event.head_commit.message, '[pd]')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Terraform Init (pd)
        run: terraform init -reconfigure -backend-config=tfbackend
        working-directory: ./pd

      - name: Terraform Plan (pd)
        run: terraform plan -var-file=pd.tfvars
        working-directory: ./pd

  terraform-apply-dev:
    name: Terraform Apply (dev)
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.head.ref, '[dev]')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Terraform Init (dev)
        run: terraform init -reconfigure -backend-config=tfbackend
        working-directory: ./dev

      - name: Terraform Apply (dev)
        run: terraform apply -var-file=dev.tfvars -auto-approve
        working-directory: ./dev

  terraform-apply-pd:
    name: Terraform Apply (pd)
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.head.ref, '[pd]')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Terraform Init (pd)
        run: terraform init -reconfigure -backend-config=tfbackend
        working-directory: ./pd

      - name: Terraform Apply (pd)
        run: terraform apply -var-file=pd.tfvars -auto-approve
        working-directory: ./pd
